#pragma kernel CSMain

#include "Complex.compute"
#include "FourierDomain.compute"

RWTexture2D<float4> H0KTexture;
RWTexture2D<float4> H0NegKTexture;
Texture2D<float4> NoiseTexture;

float _Time;
float _Amplitude;  
float _WindForce; 
float2 _WindDirection; 
float _Depth; 
int _Resolution;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{   
	float t = _Time;			
	
	float2 k = GetWaveDirection(id.x, id.y, _Resolution);

	float4 random = NoiseTexture[id.xy].rgba;

	Complex h0k = FourierAmplitudeFirst(_Amplitude, k, _WindForce, _WindDirection, random.rg);

	H0KTexture[id.xy] = float4(h0k.real, h0k.im, 0, 1);
	H0NegKTexture[id.xy] = float4(random.r, random.g, 0, 1);
}